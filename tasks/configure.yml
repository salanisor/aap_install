---
- name: Configure global settings.
  lineinfile:
    dest: "{{ postgresql_config_path }}/postgresql.conf"
    regexp: "^#?{{ item.option }}.+$"
    line: "{{ item.option }} = '{{ item.value }}'"
    state: "{{ item.state | default('present') }}"
    mode: 0644
  with_items: "{{ postgresql_global_config_options }}"
  notify: 'restart_postgresql'

- name: Configure host based authentication (if entries are configured).
  template:
    src: "pg_hba.conf.j2"
    dest: "{{ postgresql_config_path }}/pg_hba.conf"
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_group }}"
    mode: 0600
  notify: 'restart_postgresql'
  when: postgresql_hba_entries | length > 0

- name: Ensure PostgreSQL unix socket dirs exist.
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_group }}"
    mode: "{{ postgresql_unix_socket_directories_mode }}"
  with_items: "{{ postgresql_unix_socket_directories }}"

- name: Ensure PostgreSQL is started and enabled on boot.
  systemd:
    name: "{{ postgresql_daemon }}"
    state: "{{ postgresql_service_state }}"
    enabled: "{{ postgresql_service_enabled }}"

- name: "Set the proper systemd configuration"
  copy:
    src: postgresql.service
    dest: '/etc/systemd/system/postgresql.service'
    #dest: '/etc/systemd/system/multi-user.target.wants/postgresql.service'
  register: systemd

- name: "just force systemd to reread configs"
  systemd:
    daemon_reload: yes
  when: systemd.changed | bool

#- name: 'restart_postgresql'
#  service:
#    name: "{{ postgresql_daemon }}"
#    state: "{{ postgresql_restarted_state }}"
#    sleep: 5
